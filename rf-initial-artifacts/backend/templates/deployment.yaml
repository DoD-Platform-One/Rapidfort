apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend.fullname" . }}
  labels:
    {{- include "backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "backend.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "backend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: mntdatas3fs
          hostPath:
            path: /mnt/s3data
        - name: imgs-work-dir
          hostPath:
            path: /imgs-work-dir
            type: DirectoryOrCreate
        - name: env
          configMap:
            name: rf-version-info
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            #Start: Below variable are required for tunnel stub
            - name: AMI_IMAGE_ID
              value: "{{ .Values.env.ami_image_id }}"
            - name: KEYPAIR_NAME
              value: "rf-iso-worker-1.0"
            - name: SECGROUP_ID
              value: "{{ .Values.env.security_group_id }}"
            - name: VPC_SUBNET_ID
              value: "{{ .Values.env.vpc_subnet_id }}"
            - name: "BACKEND_SERVICE_NAME"
              value: "{{ .Values.env.backend_service_name}}"
            - name: VMPOOL_SERVER_ADDR
              value: "{{ .Values.env.vmpool_server_addr }}"
            #End
            - name: AUTH_SERVER_ROOT_URL
              value: "{{ .Values.env.auth_server_base_url }}"
            - name: DEPLOY_MODE
              value: "{{ .Values.env.deployment_mode }}"
            - name: RF_DEBUG
              value:  "{{ .Values.env.debug }}"
            - name: S3_BUCKET_NAME
              value:  "{{ .Values.env.s3bucket }}"
            - name: RF_VERSION_FILE
              value:  "/opt/rapidfort/env-config/.env"
            {{ if .Values.env.control_plane_host }}
            - name: "RF_APP_HOST"
              value: "{{ .Values.env.control_plane_host }}"
            {{ else }}
            - name: "RF_APP_HOST"
              value: "{{ .Values.env.rf_app_host }}"
            {{ end }}
            {{ if .Values.secretName }}
            - name: "STS_ACCESS_ID"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: STS_ACCESS_ID
            - name: "AWS_ACCESS_KEY_ID"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: AWS_ACCESS_KEY_ID
            - name: "AWS_DEFAULT_REGION"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: AWS_DEFAULT_REGION
            - name: "AWS_SECRET_ACCESS_KEY"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: AWS_SECRET_ACCESS_KEY
            - name: "STS_ROLE_ARN"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: STS_ROLE_ARN
            - name: "STS_SECRET_KEY"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: STS_SECRET_KEY
            {{ else }}
            - name: RF_ROLE_ARN
              value: "{{ .Values.env.rf_role_arn }}"
            {{ end }}
            - name: DB_URL
              valueFrom:
                secretKeyRef:
                  name: rf-connection
                  key: DB_URL
            - name: JWT_PUB_KEY
              valueFrom:
                secretKeyRef:
                  name: rf-connection
                  key: JWT_PUB_KEY
            - name: KC_CLIENT_SECRET 
              valueFrom:
                secretKeyRef:
                  name: rf-connection
                  key: KC_CLIENT_SECRET
          volumeMounts:
            - name: mntdatas3fs
              mountPath: "/opt/rapidfort/backend/app/s3fs"
            - name: imgs-work-dir
              mountPath: "/opt/rapidfort/backend/app/imgs_work_dir"
            - name: env
              mountPath: "/opt/rapidfort/env-config/"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            periodSeconds: 30
            initialDelaySeconds: 15
            timeoutSeconds: 10
            httpGet:
              path: /
              port: http
          readinessProbe:
            periodSeconds: 30
            initialDelaySeconds: 15
            timeoutSeconds: 10
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
