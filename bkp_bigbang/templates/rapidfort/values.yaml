{{- $pkg := "rapidfort" }}
{{- if .Values.rapidfort.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.rapidfort "name" "rapidfort" "defaults" (include "bigbang.defaults.rapidfort" .)) }}
{{- end }}

{{- define "bigbang.defaults.rapidfort" -}}
# hostname is deprecated and replaced with domain. But if hostname exists then use it.
domain: {{ default .Values.domain .Values.hostname }}
istio:
  enabled: {{ .Values.istio.enabled }}
  rapidfort:
    enabled: {{ .Values.istio.enabled }}
    gateways:
    - istio-system/{{ default "public" .Values.rapidfort.ingress.gateway }}

keycloak:
  initContainers:
    init_mysql:
      enabled: false

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  ingressLabels:
    {{- $gateway := default "public" .Values.rapidfort.ingress.gateway }}
    {{- $default := dict "app" (dig "gateways" $gateway "ingressGateway" nil .Values.istio) "istio" nil }}
    {{- toYaml (dig "values" "gateways" $gateway "selector" $default .Values.istio) | nindent 4 }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}

global:
  hostname: {{printf "%s.%s" "rapidfort" .Values.domain }}
{{- with .Values.rapidfort.objectStorage }}
  admin: {{ .rf_app_admin }}
  passwd: {{ .rf_app_admin_password }}
  cloud: {{ default "eks" .cloud }}
  imagePullSecrets: {{ default "private-registry" .imagePullSecret }}
  aws:
    region: {{ default "" .aws_default_region }}
    s3_bucket: {{ default "" .s3_bucket }}
    aws_access_key_id: {{ default "" .aws_access_key_id }}
    aws_secret_access_key: {{ default "" .aws_secret_access_key }}
    aws_role_arn: {{ default "" .aws_role_arn }}
{{- end }}
{{- end -}}