{{- /*
  Copyright RapidFort, Inc.
*/}}
{{- if .Values.aggregator.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aggregator
  labels:
    app.kubernetes.io/name: aggregator
    app.kubernetes.io/instance: aggregator
    app.kubernetes.io/version: "{{ .Chart.Version }}"
spec:
  replicas: {{ .Values.aggregator.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: aggregator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aggregator
        app.kubernetes.io/instance: aggregator
        app.kubernetes.io/version: "{{ .Chart.Version }}"
    spec:
      {{- if .Values.aggregator.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.aggregator.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.aggregator.volumes }}
      volumes:
        {{- tpl (toYaml (index .Values.aggregator.volumes )) . | nindent 8 }}
      {{- end }}
      {{- if .Values.aggregator.ephemeralVolumeClaimTemplates }}
      {{- if not .Values.aggregator.volumes }}
      volumes:
      {{- end }}
      {{- range .Values.aggregator.ephemeralVolumeClaimTemplates -}}
          {{ (tpl (include "rapidfort-platform.singleEphemeralVolumeClaim" .) $) | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- if .Values.aggregator.initContainers }}
      initContainers:
        {{- toYaml (index .Values.aggregator.initContainers ) | nindent 8 }}
      {{- end }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccount: {{ include "rapidfort-platform.serviceAccountName" . }}
      serviceAccountName: {{ include "rapidfort-platform.serviceAccountName" . }}
      {{- end }}      
      containers:
        - name: aggregator
          {{- if .Values.aggregator.containerSecurityContext }}
          securityContext: {{- toYaml .Values.aggregator.containerSecurityContext | nindent 12 }}
          {{- end }}
          image: "{{ .Values.aggregator.image.repository }}:{{ .Values.aggregator.image.tag }}"
          imagePullPolicy: IfNotPresent
          {{- if .Values.aggregator.volumeMounts }}
          volumeMounts:
            {{- toYaml (index .Values.aggregator.volumeMounts ) | nindent 12 }}
          {{- end }}
          {{- if .Values.aggregator.ports }}
          ports: {{- toYaml .Values.aggregator.ports | nindent 12 }}
          {{- end }}
          {{- if or $.Values.aggregator.envVars $.Values.aggregator.envVarsSecret }}
          env:
            {{- range $key, $value := $.Values.aggregator.envVars }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range .Values.aggregator.envVarsSecret }}
            - name: {{ . }}
              valueFrom:
                secretKeyRef:
                  name: rapidfort-secret
                  key: {{ . }}
            {{- end }}
          {{- end }}
          {{- if .Values.aggregator.resources}}
          resources:
            {{- toYaml .Values.aggregator.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.aggregator.startupProbe}}
          startupProbe:
            {{- toYaml .Values.aggregator.startupProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.aggregator.livenessProbe}}
          livenessProbe:
            {{- toYaml .Values.aggregator.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.aggregator.readinessProbe}}
          readinessProbe:
            {{- toYaml .Values.aggregator.readinessProbe | nindent 12 }}
          {{- end }}
      {{- with .Values.aggregator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.aggregator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.aggregator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}