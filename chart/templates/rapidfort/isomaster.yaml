{{- /*
  Copyright RapidFort, Inc.
*/}}
{{- if .Values.isomaster.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: isomaster
  labels:
    app.kubernetes.io/name: isomaster
spec:
  replicas: {{ .Values.isomaster.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: isomaster
  template:
    metadata:
      labels:
        app.kubernetes.io/name: isomaster
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.isomaster.podSecurityContext | nindent 8 }}
      {{- if .Values.isomaster.volumes }}
      volumes:
        {{- tpl (toYaml (index .Values.isomaster.volumes )) . | nindent 8 }}
      {{- end }}
      {{- if .Values.isomaster.ephemeralVolumeClaimTemplates }}
      {{- if not .Values.isomaster.volumes }}
      volumes:
      {{- end }}
      {{- range .Values.isomaster.ephemeralVolumeClaimTemplates -}}
          {{ include "rapidfort-platform.singleEphemeralVolumeClaim" . | nindent 8 }}
      {{- end }}
      {{- end }}      
      {{- end }}      
      {{- if .Values.isomaster.initContainers }}
      {{- end }}
      {{- if .Values.isomaster.initContainers }}
      initContainers:
      - name: wait-backend
        image: {{ .Values.init.image }}
        command: ["/bin/sh", "-c"]
        args:
        - until [ $(curl --connect-timeout 1 -sw '%{http_code}' http://backend -o /dev/null) -eq 200 ]; do echo $(date +"%Y-%m-%d %T,%3N") waiting for backend; sleep .3; done;
      {{- if .Values.vulnsdb.enabled }}
      - name: wait-vulnsdb
        image: {{ .Values.init.image }}
        command: ["/bin/sh", "-c"]
        args:
        - until [ $(curl --connect-timeout 1 -sw '%{http_code}' http://vulnsdb/vulns-db/api/v1/status  -o /dev/null) -eq 200 ]; do echo $(date +"%Y-%m-%d %T,%3N") waiting for vulnsdb; sleep .3; done;
      {{- end }}
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.global.imagePullSecrets }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccount: {{ include "rapidfort-platform.serviceAccountName" . }}
      serviceAccountName: {{ include "rapidfort-platform.serviceAccountName" . }}
      {{- end }}      
      containers:
        - name: isomaster
          securityContext: {{- toYaml .Values.isomaster.containerSecurityContext | nindent 12 }}
          image: {{ .Values.isomaster.image }}
          imagePullPolicy: IfNotPresent
          {{- if .Values.isomaster.volumeMounts }}
          volumeMounts:
            {{- toYaml (index .Values.isomaster.volumeMounts ) | nindent 12 }}
          {{- end }}
          {{- if .Values.isomaster.ports }}
          ports: {{- toYaml .Values.isomaster.ports | nindent 12 }}
          {{- end }}
          {{- if or $.Values.isomaster.envVars $.Values.isomaster.envVarsSecret }}
          env:
            {{- range $key, $value := $.Values.isomaster.envVars }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range .Values.isomaster.envVarsSecret }}
            - name: {{ . }}
              valueFrom:
                secretKeyRef:
                  name: rapidfort-secret
                  key: {{ . }}
            {{- end }}
          {{- end }}
          {{- if .Values.isomaster.resources}}
          resources:
            {{- toYaml .Values.isomaster.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.isomaster.startupProbe}}
          startupProbe:
            {{- toYaml .Values.isomaster.startupProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.isomaster.livenessProbe}}
          livenessProbe:
            {{- toYaml .Values.isomaster.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.isomaster.readinessProbe}}
          readinessProbe:
            {{- toYaml .Values.isomaster.readinessProbe | nindent 12 }}
          {{- end }}
      {{- with .Values.isomaster.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.isomaster.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.isomaster.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: iso-master
  labels:
    app.kubernetes.io/name: isomaster
spec:
  type: {{ .Values.isomaster.service.type }}
  ports:
    - port: {{ .Values.isomaster.service.port }}
      protocol: TCP
      name: http
      targetPort: {{ .Values.isomaster.service.targetPort }}
  selector:
    app.kubernetes.io/name: isomaster
{{- if .Values.global.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: isomaster
  labels:
    app.kubernetes.io/name: isomaster
  annotations:
  {{- with .Values.isomaster.ingress.annotations }}  
    {{- toYaml . | nindent 4 }}  
  {{- end }}
  {{- with .Values.global.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }} 
spec:
  ingressClassName: {{ default .Values.isomaster.ingress.ingressClassName .Values.global.ingress.className }}
  {{- if .Values.global.ingress.tls }}
    {{ include "rapidfort-platform.ingress.tls" . | nindent 2 }}
  {{- end }}
  rules:
    {{- range .Values.isomaster.ingress.hosts }}
    - host: {{ include "prefix.isFQDN" $.Values.global.hostname | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: iso-master
                port:
                  number: {{ $.Values.isomaster.service.port }}
          {{- end }}
    {{- end }}
{{- end }}
{{- end }}