{{- /*
  Copyright RapidFort, Inc.
*/}}
{{- if .Values.rfscan.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rfscan
  labels:
    app.kubernetes.io/name: rfscan
    app.kubernetes.io/instance: rfscan
    app.kubernetes.io/version: "{{ .Chart.Version }}"
spec:
  replicas: {{ .Values.rfscan.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: rfscan
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rfscan
        app.kubernetes.io/instance: rfscan
        app.kubernetes.io/version: "{{ .Chart.Version }}"
    spec:
      {{- if .Values.rfscan.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.rfscan.podSecurityContext | nindent 8 }}
      {{- end }}
      volumes:      
      {{- if .Values.rfscan.volumes }}
        {{- tpl (toYaml (index .Values.rfscan.volumes )) . | nindent 8 }}
      {{- end }}
      {{- if .Values.rfscan.ephemeralVolumeClaimTemplates }}
      {{- range .Values.rfscan.ephemeralVolumeClaimTemplates -}}
          {{ (tpl (include "rapidfort-platform.singleEphemeralVolumeClaim" .) $) | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- if .Values.db.ssl }}
        {{- if .Values.db.ssl.certFile }}
          {{- (tpl (include "rapidfort-platform.db_ssl_cert_volume" .Values.db.ssl ) .)| nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.rfscan.initContainers }}
      initContainers:
        {{- toYaml (index .Values.rfscan.initContainers ) | nindent 8 }}
      {{- end }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccount: {{ include "rapidfort-platform.serviceAccountName" . }}
      serviceAccountName: {{ include "rapidfort-platform.serviceAccountName" . }}
      {{- end }}
      {{- if .Values.rfscan.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.rfscan.terminationGracePeriodSeconds }}
      {{- end }}      
      containers:
        - name: rfscan
          {{- if .Values.rfscan.containerSecurityContext }}
          securityContext: {{- toYaml .Values.rfscan.containerSecurityContext | nindent 12 }}
          {{- end }}
          image: "{{ .Values.rfscan.image.repository }}:{{ .Values.rfscan.image.tag }}"
          imagePullPolicy: IfNotPresent
          volumeMounts:          
          {{- if .Values.rfscan.volumeMounts }}
            {{- toYaml (index .Values.rfscan.volumeMounts ) | nindent 12 }}
          {{- end }}
          {{- if .Values.db.ssl }}
            {{- if .Values.db.ssl.certFile }}
              {{- tpl (include "rapidfort-platform.db_ssl_cert_volumeMount" .Values.db.ssl ) $ | nindent 12 }}
            {{- end }}
          {{- end }}          
          {{- if .Values.rfscan.ports }}
          ports: {{- toYaml .Values.rfscan.ports | nindent 12 }}
          {{- end }}
          {{- if or $.Values.rfscan.envVars $.Values.rfscan.envVarsSecret }}
          env:
            {{- range $key, $value := $.Values.rfscan.envVars }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range .Values.rfscan.envVarsSecret }}
            - name: {{ . }}
              valueFrom:
                secretKeyRef:
                  name: rapidfort-secret
                  key: {{ . }}
                  optional: true
            {{- end }}
          {{- end }}
          {{- if .Values.rfscan.resources}}
          resources:
            {{- toYaml .Values.rfscan.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.rfscan.startupProbe}}
          startupProbe:
            {{- toYaml .Values.rfscan.startupProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.rfscan.livenessProbe}}
          livenessProbe:
            {{- toYaml .Values.rfscan.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.rfscan.readinessProbe}}
          readinessProbe:
            {{- toYaml .Values.rfscan.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.rfscan.lifecycle }}
          lifecycle:
            {{- toYaml .Values.rfscan.lifecycle | nindent 12 }}
          {{- end }}
      {{- with .Values.rfscan.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        {{- with .Values.rfscan.affinity.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}       
        podAntiAffinity:
          {{- if eq .Values.rfscan.affinity.antiAffinity "strict" }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: rfscan
              topologyKey: "kubernetes.io/hostname"  
          {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: rfscan
                topologyKey: "kubernetes.io/hostname"
          {{- end }}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: "kubernetes.io/hostname"
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: rfscan
      {{- with .Values.rfscan.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: rf-scan
  labels:
    app.kubernetes.io/name: rfscan
spec:
  type: {{ .Values.rfscan.service.type }}
  ports:
    - port: {{ .Values.rfscan.service.port }}
      protocol: TCP
      name: http
      targetPort: {{ .Values.rfscan.service.targetPort }}
  selector:
    app.kubernetes.io/name: rfscan
{{- if .Values.global.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rfscan
  labels:
    app.kubernetes.io/name: rfscan
  annotations:
  {{- with .Values.rfscan.ingress.annotations }}  
    {{- toYaml . | nindent 4 }}  
  {{- end }}
  {{- with .Values.global.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }} 
spec:
  ingressClassName: {{ default .Values.rfscan.ingress.ingressClassName .Values.global.ingress.className }}
  {{- if .Values.global.ingress.tls }}
    {{ include "rapidfort-platform.ingress.tls" . | nindent 2 }}
  {{- end }}
  rules:
    {{- range .Values.rfscan.ingress.hosts }}
    - host: {{ include "prefix.isFQDN" $.Values.global.hostname | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: rf-scan
                port:
                  number: {{ $.Values.rfscan.service.port }}
          {{- end }}
    {{- end }}
{{- end }}
---
{{- if .Values.rfscan.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: rfscan
  labels:
    app.kubernetes.io/name: rfscan
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rfscan
  minReplicas: {{ .Values.rfscan.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.rfscan.autoscaling.maxReplicas }}
  metrics:
    {{- if .Values.rfscan.autoscaling.targetCPUUtilizationPercentage }}
    - type: Resource
      resource:
        name: cpu
        target:
          type: "Utilization"
          averageUtilization: {{ .Values.rfscan.autoscaling.targetCPUUtilizationPercentage }}
    {{- end }}
    {{- if .Values.rfscan.autoscaling.targetMemoryUtilizationPercentage }}
    - type: Resource
      resource:
        name: memory
        target:
          type: "Utilization"
          averageUtilization: {{ .Values.rfscan.autoscaling.targetMemoryUtilizationPercentage }}
    {{- end }}
{{- end }}
{{- end }}