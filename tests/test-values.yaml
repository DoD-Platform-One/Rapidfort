global:
  aws:
    aws_access_key_id: FAKEID54G8A4F654GH7T
    aws_secret_access_key: FAKEKEYxlLONi5IEMW8zA0Va4l0i9yPwfD5AMn0K
    region: us-east-1
    storage: fakebucket
  admin: ci@repo1.dso.mil
  passwd: p@ssw0rd
  hostname: rapidfort.bigbang.dev
  cloud: "kind"

#
# aggregator
#
aggregator:
  ephemeralVolumeClaimTemplates:
  - name: aggregator-data
    accessMode: "ReadWriteOnce"
    storageClassName: "{{ .Values.storageClass.name }}"
    size: 10Gi
  - name: aggregator-data-local-bucket
    accessMode: "ReadWriteOnce"
    storageClassName: "{{ .Values.storageClass.name }}"
    size: 10Gi
  initContainers: []
  resources: {}
    # limits:
    #   cpu: "2000m"
    #   memory: "4096Mi"
    # requests:
    #   cpu: "500m"
    #   memory: "512Mi"

#
# backend
#
backend:
  resources: {}
  ephemeralVolumeClaimTemplates:
  - name: backend-data
    accessMode: "ReadWriteOnce"
    storageClassName: "{{ .Values.storageClass.name }}"
    size: 10Gi
  initContainers: []
    # limits:
    #   cpu: "2000m"
    #   memory: "4096Mi"
    # requests:
    #   cpu: "500m"
    #   memory: "512Mi"

filesredis:
  resources: {}
  volumeClaimTemplates:
  - name: "redis-data"
    accessMode: "ReadWriteOnce"
    storageClassName: "{{ .Values.storageClass.name }}"
    size: "10Gi"

fileupload:
  enabled: true
  ephemeralVolumeClaimTemplates:
  - name: fileupload-data
    accessMode: "ReadWriteOnce"
    storageClassName: "{{ .Values.storageClass.name }}"
    size: 10Gi

isomaster:
  initContainers: []
  ephemeralVolumeClaimTemplates:
  - name: imgs-work-dir
    accessMode: "ReadWriteOnce"
    storageClassName: "{{ .Values.storageClass.name }}"
    size: 10Gi

keycloak:
  initContainers: []

mysql:
  volumeClaimTemplates:
  - name: "mysql-data"
    accessMode: "ReadWriteOnce"
    storageClassName: "{{ .Values.storageClass.name }}"
    size: "10Gi"

redis:
  initContainers:
  - name: disk-init
    image: registry1.dso.mil/ironbank/redhat/ubi/ubi8-minimal:8.9
    command: ["chown", "1001", "/opt/rapidfort/local-bucket/data/redis"]
    volumeMounts:
      - name: redis-data
        mountPath: /opt/rapidfort/local-bucket/data/redis
  # NOTE: disabled till we get and image with xz utility
  # - name: init-vulnsdb
  #   image: quay.io/rapidfort/init:1.0
  #   command:
  #   - /bin/sh
  #   - -c
  #   - |
  #       if [ -f /opt/rapidfort/local-bucket/data/redis/dump.rdb ]; then
  #           echo "Vulns-DB init not required"
  #       else
  #           echo "Vulns-DB initialization..."
  #           unxz /dump.rdb.xz
  #           cp /dump.rdb /opt/rapidfort/local-bucket/data/redis
  #           chown 1001 /opt/rapidfort/local-bucket/data/redis/dump.rdb
  #           echo "Vulns-DB initialization done"
  #       fi
  #   volumeMounts:
  #     - name: redis-data
  #       mountPath: /opt/rapidfort/local-bucket/data/redis
  resources: {}
  volumeClaimTemplates:
  - name: "redis-data"
    accessMode: "ReadWriteOnce"
    storageClassName: "{{ .Values.storageClass.name }}"
    size: "10Gi"

rfscan:
  initContainers: []
  ephemeralVolumeClaimTemplates:
  - name: imgs-work-dir
    accessMode: "ReadWriteOnce"
    storageClassName: "{{ .Values.storageClass.name }}"
    size: 10Gi

rfapi:
  initContainers: []

rfpubsub:
  initContainers: []

vulnsdb:
  initContainers: []
  resources: {}

runner:
  initContainers: []
  
# runner:
#   secret:
#     name: rf-runner-secret

# -- Big Bang Values
domain: bigbang.dev
istio:
  enabled: false
  mtls:
    # -- STRICT = Allow only mutual TLS traffic,
    # PERMISSIVE = Allow both plain text and mutual TLS traffic
    # PERMISSIVE is required for any action which redeploys pods because STRICT interferes with initContainers
    # Can be changed to STRICT after all initContainers have finished but will interfere with upgrades/pod deployments that have initContainers
    mode: PERMISSIVE
  rapidfort:
    enabled: false
    gateways:
    - istio-system/public
    hosts:
    - rapidfort.{{ .Values.domain }}

networkPolicies:
  enabled: false
  ingressLabels: 
    app: istio-ingressgateway
    istio: ingressgateway
  # -- IP range of api.rapidfort.com
  rapidfortApiIpRange: ""
  # -- test
  controlPlaneCidr: ""

bbtests:
  enabled: false

bb-version: master

addons:
  minio:
    enabled: false