{{- $pkg := "rapidfort" }}
{{- define "bigbang.defaults.rapidfort" -}}
# hostname is deprecated and replaced with domain. But if hostname exists then use it.
domain: {{ default .Values.domain .Values.hostname }}
istio:
  enabled: {{ .Values.istio.enabled }}
  rapidfort:
    gateways:
    - istio-system/{{ default "public" .Values.rapidfort.ingress.gateway }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  ingressLabels:
    {{- $gateway := default "public" .Values.rapidfort.ingress.gateway }}
    {{- $default := dict "app" (dig "gateways" $gateway "ingressGateway" nil .Values.istio) "istio" nil }}
    {{- toYaml (dig "values" "gateways" $gateway "selector" $default .Values.istio) | nindent 4 }}

{{- with .Values.rapidfort.objectStorage }}
{{- if and .accessKey .accessSecret .bucket }}
secrets:
  stringData: 
    AWS_ACCESS_KEY_ID: {{ .accessKey }}
    AWS_SECRET_ACCESS_KEY: {{ .accessSecret }}
    RF_S3_BUCKET: {{ .bucket }}
{{- end }}
{{- end }}

keycloak:
  initContainer:
    enabled: {{ not .Values.istio.enabled }}
{{- end }}

{{- /* Create secret */ -}}
{{- if (get .Values $pkg).enabled }}
{{- include "values-secret" (dict "root" $ "package" (get .Values $pkg) "name" $pkg "defaults" (include (printf "bigbang.defaults.%s" $pkg) .)) }}
{{- end }}
